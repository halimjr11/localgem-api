<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="icon" type="image/png" href="/images/localgem.png">
    <link href="/css/styles.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6',
                        secondary: '#10B981',
                        dark: '#1F2937',
                    },
                },
            },
        };
    </script>
</head>
<body class="bg-gray-50">
    <div class="min-h-screen">
        <!-- Header -->
        <header class="bg-white shadow">
            <div class="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 flex items-center">
                <img src="/images/localgem_trp.png" alt="LocalGem Logo" class="h-12 w-auto mr-4">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">{{title}}</h1>
                    <p class="mt-1 text-gray-600">Documentation for LocalGem API</p>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
            <div class="px-4 py-6 sm:px-0">
                <!-- Introduction -->
                <div class="bg-white overflow-hidden shadow rounded-lg mb-8 p-6">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-4">Introduction</h2>
                    <p class="text-gray-600 mb-4">Welcome to the LocalGem API documentation. This API provides endpoints for managing places, users, and authentication.</p>
                    
                    <div class="mt-4">
                        <h3 class="text-lg font-medium text-gray-800 mb-2">Base URL</h3>
                        <code class="bg-gray-100 px-2 py-1 rounded text-sm">http://localhost:3000/api</code>
                    </div>
                </div>

                <!-- Authentication -->
                <div class="mb-8">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-4">Authentication</h2>
                    <p class="text-gray-600 mb-4">Most endpoints require authentication. Include the JWT token in the Authorization header:</p>
                    <pre class="bg-gray-800 text-green-400 p-5 rounded-lg overflow-x-auto text-sm mb-4">
                        <code>Authorization: Bearer your.jwt.token.here</code>
                    </pre>
                </div>

                <!-- Endpoints -->
                <div class="space-y-8">
                    <h2 class="text-2xl font-semibold text-gray-800">API Endpoints</h2>
                    
                    {{#each endpoints}}
                    <div class="bg-white overflow-hidden shadow rounded-lg">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <div class="flex items-center">
                                {{#if (lookup . 'method')}}
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium mr-3
                                    {{#ifEquals method 'GET'}}bg-blue-100 text-blue-800
                                    {{else ifEquals method 'POST'}}bg-green-100 text-green-800
                                    {{else ifEquals method 'PUT'}}bg-yellow-100 text-yellow-800
                                    {{else ifEquals method 'DELETE'}}bg-red-100 text-red-800
                                    {{else}}bg-gray-100 text-gray-800{{/ifEquals}}">
                                    {{method}}
                                </span>
                                {{/if}}
                                <h3 class="text-lg font-medium text-gray-900">{{path}}</h3>
                            </div>
                            <p class="mt-1 text-gray-600">{{description}}</p>
                        </div>
                        
                        <div class="px-6 py-4">
                            {{#if request}}
                            <div class="mb-4">
                                <h4 class="text-sm font-medium text-gray-500 uppercase tracking-wider mb-2">Request</h4>
                                {{#if request.body}}
                                <div class="mb-3">
                                    <span class="text-sm font-medium text-gray-700">Body:</span>
                                    <pre class="mt-1 bg-gray-800 p-4 rounded-lg overflow-x-auto text-sm"><code>{{stringify request.body}}</code></pre>
                                </div>
                                {{/if}}
                                {{#if request.params}}
                                <div class="mb-3">
                                    <span class="text-sm font-medium text-gray-700">URL Parameters:</span>
                                    <pre class="mt-1 bg-gray-800 p-4 rounded-lg overflow-x-auto text-sm"><code>{{stringify request.params}}</code></pre>
                                </div>
                                {{/if}}
                            </div>
                            {{/if}}

                            <div>
                                <h4 class="text-sm font-medium text-gray-500 uppercase tracking-wider mb-2">Response</h4>
                                <pre class="bg-gray-800 p-4 rounded-lg overflow-x-auto text-sm"><code>{{stringify response}}</code></pre>
                            </div>
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </main>

        <!-- Footer -->
        <footer class="bg-white border-t border-gray-200 mt-12">
            <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
                <p class="text-center text-gray-500 text-sm">
                    &copy; {{currentYear}} LocalGem API. All rights reserved.
                </p>
            </div>
        </footer>
    </div>

    <script>
        // Function to add syntax highlighting to JSON
        function syntaxHighlight(json) {
            if (typeof json !== 'string') {
                json = JSON.stringify(json, null, 2);
            }
            
            // Escape HTML and format JSON
            json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            
            // Add syntax highlighting
            return json.replace(/("(\\.|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(\.\d+)?([eE][+\-]?\d+)?)/g, function(match) {
                let cls = 'token';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'key';
                    } else {
                        cls = 'string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'boolean';
                } else if (/null/.test(match)) {
                    cls = 'null';
                } else if (/^-?\d+(\.\d+)?([eE][+\-]?\d+)?$/.test(match)) {
                    cls = 'number';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
        }

        // Process all code blocks on page load
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('pre code').forEach((block) => {
                try {
                    const content = block.textContent.trim();
                    if (content.startsWith('{') || content.startsWith('[')) {
                        const json = JSON.parse(content);
                        const formatted = JSON.stringify(json, null, 2);
                        block.innerHTML = syntaxHighlight(formatted);
                    }
                } catch (e) {
                    // Not a JSON string, leave as is
                    console.log('Not a JSON block:', e);
                }
            });
        });

        // Register the stringify helper for Handlebars
        Handlebars.registerHelper('stringify', function(context) {
            return JSON.stringify(context, null, 2);
        });
    </script>
</body>
</html>
